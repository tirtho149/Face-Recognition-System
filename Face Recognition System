import cgi
from base64 import b64decode
import face_recognition
import os

UPLOAD_DIR = "uploads"
STUDENTS_DIR = "students"

def save_uploaded_image(data_uri, filename):
    try:
        header, encoded = data_uri.split(",", 1)
        data = b64decode(encoded)
        filepath = os.path.join(UPLOAD_DIR, filename)
        with open(filepath, "wb") as f:
            f.write(data)
        return filepath
    except Exception as e:
        print(f"Error saving uploaded image: {e}")
        return None

def load_face_encodings(image_path):
    try:
        image = face_recognition.load_image_file(image_path)
        facial_features = face_recognition.face_encodings(image)
        if facial_features:
            return facial_features[0]
        else:
            return None
    except Exception as e:
        print(f"Error loading face encodings: {e}")
        return None

def authenticate_user(got_image_path, email):
    try:
        existing_image_path = os.path.join(STUDENTS_DIR, f"{email}.jpg")

        if not os.path.isfile(existing_image_path):
            raise FileNotFoundError("User image not found")

        got_image_facial_features = load_face_encodings(got_image_path)
        existing_image_facial_features = load_face_encodings(existing_image_path)

        if got_image_facial_features and existing_image_facial_features:
            results = face_recognition.compare_faces(
                [existing_image_facial_features], got_image_facial_features
            )
            return results and results[0]
        else:
            return False
    except Exception as e:
        print(f"Error authenticating user: {e}")
        return False

def main():
    try:
        formData = cgi.FieldStorage()

        if "current_image" not in formData or "email" not in formData:
            raise ValueError("Missing required parameters")

        face_match = 0
        image = formData.getvalue("current_image")
        email = formData.getvalue("email")

        os.makedirs(UPLOAD_DIR, exist_ok=True)

        uploaded_image_path = save_uploaded_image(image, "temp_image.png")

        if uploaded_image_path:
            if authenticate_user(uploaded_image_path, email):
                face_match = 1

        print("Content-Type: text/html")
        print()

        if face_match == 1:
            print("<script>alert('Welcome, {}')</script>".format(email))
        else:
            print("<script>alert('Face not recognized')</script>")

    except Exception as e:
        print(f"Error: {e}")

if __name__ == "__main__":
    main()
